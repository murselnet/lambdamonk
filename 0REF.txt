# paketler klasörü olursa lambda_function.py dosya başı aklenecek
import sys
sys.path.insert(0, 'paketler')




lokalde terminalde çalıştırma konuda
uvicorn lambda_function:app --reload

pip install mangum reload uvicorn mangum


pip freeze > requirements.txt 

mkdir paketler

pip install -r requirements.txt -t ./paketler --platform manylinux2014_x86_64 --python-version 3.11 --only-binary=:all:



# eğer kendim zip oluşturusam
cd lambda_projem
zip -r9 lambda_paketim.zip lambda_function.py paketler/   # >>> dikkat > yüklenecekler bu zip e eklenecek
cd ..

Zip dosyasının içinde lambda_function.py ve diğer dosyalarınız kök dizinde olmalıdır, bir üst klasörün içinde değil.

Kütüphanelerinizin Lambda'nın çalıştığı Amazon Linux 2 ortamıyla uyumlu olması 
kritik öneme sahiptir. 
--platform manylinux2014_x86_64 
parametresi bu konuda yardımcı olur.

https://aistudio.google.com/app/prompts/15IJW6MOQnDpaOgbWOgJ1gRu813acMh8J




PI Gateway'e bir HTTP isteği gelir.
API Gateway, bu isteği bir Lambda olayına (event objesi) dönüştürerek lambda_function.py dosyanızdaki handler fonksiyonunu tetikler.
lambda_function.py içindeki Mangum(app) tarafından oluşturulan handler, bu Lambda olayını alır.
Mangum, Lambda olayını FastAPI/Flask uygulamanızın (main.py içindeki app) anlayabileceği bir ASGI (FastAPI için) veya WSGI (Flask için) isteğine dönüştürür.
FastAPI/Flask uygulamanız bu isteği işler ve bir yanıt üretir (örneğin, @app.get("/") rotasındaki fonksiyon çalışır).
Mangum, FastAPI/Flask uygulamanızın ürettiği bu yanıtı alır ve API Gateway'in beklediği Lambda yanıt formatına (genellikle {'statusCode': 200, 'headers': {...}, 'body': '...'} şeklinde bir JSON) dönüştürür.
Bu yanıt API Gateway'e geri döner ve oradan da istemciye HTTP yanıtı olarak gönderilir.





⚡️Commands from the video:
1. pip install -t dependencies -r requirements.txt
2. (cd dependencies; zip ../aws_lambda_artifact.zip -r .)
    powershell > Compress-Archive -Path .\* -DestinationPath ..\aws_lambda_artifact.zip -Force
3. zip aws_lambda_artifact.zip -u main.py


********************************************************

pip freeze > requirements.txt 

paketler klasör için temizle

pip install -r requirements.txt -t ./paketler --platform manylinux2014_x86_64 --python-version 3.11 --only-binary=:all:

git add > git commit > git push

